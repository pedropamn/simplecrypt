#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Sep 19, 2021 03:59:34 PM -03  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import main_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = simplecrypttool (root)
    main_support.init(root, top)
    root.mainloop()

w = None
def create_simplecrypttool(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_simplecrypttool(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = simplecrypttool (w)
    main_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_simplecrypttool():
    global w
    w.destroy()
    w = None

class simplecrypttool:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("464x247+405+159")
        top.minsize(1, 1)
        top.maxsize(1351, 738)
        top.resizable(1,  1)
        top.title("Simple Crypt Tool v1.0")
        top.configure(highlightcolor="black")

        self.filepath = tk.Entry(top)
        self.filepath.place(relx=0.216, rely=0.312, height=33, relwidth=0.422)
        self.filepath.configure(background="white")
        self.filepath.configure(font="TkFixedFont")
        self.filepath.configure(readonlybackground="#ae9caf")
        self.filepath.configure(selectbackground="blue")
        self.filepath.configure(selectforeground="white")

        self.button_select_file = tk.Button(top)
        self.button_select_file.place(relx=0.647, rely=0.308, height=33
                , width=73)
        self.button_select_file.configure(activebackground="#f9f9f9")
        self.button_select_file.configure(borderwidth="2")
        self.button_select_file.configure(command=main_support.click_on_select_file_btn)
        self.button_select_file.configure(text='''Select file''')

        self.password = tk.Entry(top)
        self.password.place(relx=0.216, rely=0.51, height=33, relwidth=0.595)
        self.password.configure(background="white")
        self.password.configure(font="TkFixedFont")
        self.password.configure(selectbackground="blue")
        self.password.configure(selectforeground="white")
        self.password.configure(show="*")

        self.button_crypt = tk.Button(top)
        self.button_crypt.place(relx=0.278, rely=0.729, height=43, width=103)
        self.button_crypt.configure(activebackground="#f9f9f9")
        self.button_crypt.configure(borderwidth="2")
        self.button_crypt.configure(command=main_support.click_on_crypt_button)
        self.button_crypt.configure(text='''Crypt''')

        self.button_decrypt = tk.Button(top)
        self.button_decrypt.place(relx=0.552, rely=0.725, height=43, width=103)
        self.button_decrypt.configure(activebackground="#f9f9f9")
        self.button_decrypt.configure(borderwidth="2")
        self.button_decrypt.configure(command=main_support.click_on_decrypt_button)
        self.button_decrypt.configure(state='active')
        self.button_decrypt.configure(text='''Decrypt''')

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.216, rely=0.121, height=31, width=259)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(font="-family {DejaVu Sans} -size 20")
        self.Label1.configure(text='''Simple Crypt Tool''')

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.sub_menu = tk.Menu(top,
                tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu,
                label="About")
        self.sub_menu.add_command(
                command=main_support.about,
                label="About Simple Crypt Tool")

    @staticmethod
    def popup1(event, *args, **kwargs):
        Popupmenu1 = tk.Menu(root, tearoff=0)
        Popupmenu1.post(event.x_root, event.y_root)

if __name__ == '__main__':
    vp_start_gui()





